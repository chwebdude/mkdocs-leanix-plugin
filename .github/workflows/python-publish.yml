# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Upload Python Package

on:

#   workflow_dispatch:
   push:
      branches: 
        - master

permissions:
  contents: write

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7

    - name: Release
      uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      with:
        # body_path: ${{ github.workspace }}-CHANGELOG.txt
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
        # token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        draft: true
        name: ${{ steps.gitversion.outputs.semVer }}
      # env:
      #   GITHUB_REPOSITORY: my_gh_org/my_gh_repo

    # - name: Github Release
    #   # You may pin to the exact commit or the version.
    #   # uses: elgohr/Github-Release-Action@ed9ebd01a0c57e64e948e7f2ff59c0159e52c204
    #   uses: elgohr/Github-Release-Action@v3.1
    #   with:
    #     # The name of the release to publish
    #     release: 'v${{ steps.gitversion.outputs.semVer }}' 
        
    # - uses: gittools/actions/gitreleasemanager/setup@v0.9.2
    #   name: Install GitReleaseManager
    #   env:
    #     ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    #   with:
    #     versionSpec: '0.10.x'

    # - uses: gittools/actions/gitreleasemanager/create@v0.9.2
    #   name: Create release with GitReleaseManager      
    #   env:
    #     ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    #   with:        
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     owner: 'chwebdude'
    #     repository: 'mkdocs-leanix-plugin'
    #     name: 'v${{ steps.gitversion.outputs.semVer }}'        
    #     allowEmpty: true        
        

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools wheel twine
       
    - name: Build
      run: |
        sed -i "/^    version=/ s/[0-9]\.[0-9]\.[0-9]/${{ steps.gitversion.outputs.semVer }}/" setup.py
        python setup.py sdist bdist_wheel
        
    - name: Publish
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
